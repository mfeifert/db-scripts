#!/usr/bin/env python3

import sys
import sqlite3
import subprocess

if len(sys.argv) < 3:
    print("Usage: water FILE entry [liters]")
    print("       water FILE report [rows]")
    sys.exit(1)

db_path = sys.argv[1]
table = 'water'

def main():
    if len(sys.argv) == 4:
        report_rows = sys.argv[3]
    else:
        report_rows = 10
    if sys.argv[2] == 'entry':
        insert_log_entry()
    elif sys.argv[2] == 'report':
        print_daily_report(report_rows)
    else:
        print('Command not recognized. Valid commands are "entry" and "report".')

def insert_log_entry():
    if len(sys.argv) == 4:
        liters= sys.argv[3]
    else:
        liters = input("Liters: ")
    sql_log_entry = f"INSERT INTO {table} VALUES (date('now', 'localtime'), {liters})"
    sql_log_report = f"SELECT * FROM {table} WHERE Date IS date('now', 'localtime')"
    issue_sql_statement(db_path, sql_log_entry)
    print_report(db_path, sql_log_report)
    print_daily_report(1)

def print_daily_report(rows):
    sql_daily_report = f"SELECT Date, sum(Liters) AS TotalLiters FROM {table} GROUP BY Date ORDER BY Date DESC LIMIT {rows}"
    print_report(db_path, sql_daily_report)

def issue_sql_statement(db, statement):
    con = sqlite3.connect(db)
    cur = con.cursor()
    cur.execute(statement)
    con.commit()
    con.close()

def print_report(db, statement):
    # SELECT statements are run via shell to produce the "-box" output format
    subprocess.run([f'sqlite3 -box {db} "{statement}"'], shell=True)

main()
